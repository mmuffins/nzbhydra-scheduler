name: build-docker

on:
  workflow_dispatch:
  push:
    branches: 
      - main
  pull_request:

env:
  version: "1.1.0.${{ github.run_number }}${{ github.run_attempt }}"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      build_configuration: Release
      build_runtime: linux-x64
      build_framework: net8.0
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8
      
    - name: dotnet restore
      run: dotnet restore --runtime ${{ env.build_runtime }}
      
    - name: dotnet publish
      run: dotnet publish nzbhydra-schedule/nzbhydra-schedule.csproj --configuration ${{ env.build_configuration }} -p:PublishSingleFile=false --self-contained true -p:PublishTrimmed=false -p:PublishReadyToRun=true --runtime ${{ env.build_runtime }} --framework ${{ env.build_framework }} -p:Version=${{ env.version }} -p:PackageVersion=${{ env.version }} --output "${{ github.workspace }}/publish/${{ env.build_runtime }}"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: ${{ github.workspace }}/publish/${{ env.build_runtime }}
      
    - name: dotnet test
      run: dotnet test nzbhydra-schedule.sln --configuration ${{ env.build_configuration }} --framework ${{ env.build_framework }} --verbosity normal --logger "trx;LogFileName=TestResults.trx"
        

  release:
    if: ${{ github.event_name != 'pull_request'  && github.ref_name == 'main' }}
    runs-on: ubuntu-latest
    needs: build
    environment: dockerhub
    env: 
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      
    steps:
    - uses: actions/checkout@v4
    - name: Get artifacts
      uses: actions/download-artifact@v4
      with:
        name: build
        path: ${{ github.workspace }}/docker/publish

    - name: Docker Setup QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
        
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}
        logout: true

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: "${{ github.workspace }}/docker"
        push: true
        platforms: linux/amd64
        tags: |
          mmuffins/nzbhydra-scheduler:latest
          mmuffins/nzbhydra-scheduler:${{ env.version }}
        labels: |
          org.opencontainers.image.title=${{ github.event.repository.name }}
          org.opencontainers.image.description=${{ github.event.repository.description }}
          org.opencontainers.image.url=${{ github.event.repository.html_url }}
          org.opencontainers.image.source=${{ github.event.repository.clone_url }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.version=${{ env.version }}
          org.opencontainers.image.licenses='MIT'
